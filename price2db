#!/usr/bin/env python

""" 
Basic price monitoring app.
Ref: https://www.youtube.com/watch?v=uWg-XAyyJTk
"""

# Imports
import requests
from bs4 import BeautifulSoup
from datetime import datetime
from pony import orm

db = orm.Database()
db.bind(provider="sqlite", filename="products.db", create_db=True)


class Products(db.Entity):
    name = orm.Required(str)
    price = orm.Required(float)
    created_date = orm.Required(datetime)


db.generate_mapping(create_tables=True)


def sweetwater(session):
    url = "https://www.sweetwater.com/store/detail/SM7B--shure-sm7b-cardioid-dynamic-vocal-microphone"
    resp = session.get(url)
    soup = BeautifulSoup(resp.text, "html.parser")
    data = (
        "sweetwater",
        float(
            soup.select_one("div.product-pricing div.product-price--final")
            .text.replace("\n", "")
            .strip("$")
        ),
    )
    return data


def amazon(session):
    url = "https://www.amazon.com/Shure-SM7B-Cardioid-Dynamic-Microphone/dp/B0002E4Z8M?th=1"
    resp = session.get(url)
    soup = BeautifulSoup(resp.text, "html.parser")
    data = (
        "amazon",
        # float(
        # soup.select("span.a-price-whole")  # .text.replace(
        # soup.select("div.corePrice_feature_div span.a-offscreen")
        # <span class="a-offscreen">$399.00</span>
        soup.find('span', class_='a-offscreen')
        # "$", ""
        # )
        # .strip("$")
        # ),
    )
    return data


def thomann(session):
    url = "https://www.thomannmusic.com/shure_sm_7b_studiomikro.htm"
    resp = session.get(url)
    soup = BeautifulSoup(resp.text, "html.parser")
    data = (
        "thomann",
        float(soup.select_one("div.price-wrapper div.price").text.replace("$", "")),
    )
    return data


def main():
    session = requests.Session()
    session.headers.update(
        {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36"
        }
    )

    print(sweetwater(session))
    print(amazon(session))
    print(thomann(session))


if __name__ == "__main__":
    main()
